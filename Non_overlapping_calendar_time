'''
Write a function merge_ranges() that takes a list of meeting time ranges and returns a list of condensed ranges.

For example, given:

  [(0, 1), (3, 5), (4, 8), (10, 12), (9, 10)]

your function would return:

  [(0, 1), (3, 8), (9, 12)]


'''
A = [(0, 1), (3, 5), (4, 8), (10, 12), (9, 10)]

def build_calender(A):
    '''
     Input: A list of tuple 
     Output : A list of tuple with non overlappring calendar time
    '''
    i = 0
    j = 1
    overlap_time = []
    while i < len(A) - 1 and j < len(A):

        if A[i][1] > A[j][0]:
            #Range is Overlaping
            #Increment j but keep i same
            m1 = min(A[i][0], A[j][0])
            m2 = max(A[i][1],A[j][1])

            overlap_time.append((m1,m2))
            i = j + 1
            j = i + 1
        else:
            #Increment i and j
            #Do nothing till range overlap
            overlap_time.append((A[i][0],A[i][1]))
            i +=1
            j +=1
    return overlap_time
